// generated by res2go

package main

import (
	"fmt"
	"os/exec"
	"strings"

	"github.com/ying32/govcl/vcl"
	"golang.org/x/sys/windows/registry"
)

//::private::
type TForm1Fields struct {
}

var deletedFolder = ""
var recoveryToFolder = ""
var recoveryType = ""
var recoveryFile = ""

func (f *TForm1) OnButton1Click(vcl.IObject) {
	selectDir := f.SelectDirectoryDialog1
	if selectDir.Execute() {
		filename := selectDir.FileName()
		fmt.Println("File you lose from the Folder: ", filename)
		f.Edit1.SetText(filename)
		deletedFolder = filename
	}

}

func (f *TForm1) OnButton2Click(vcl.IObject) {
	selectDir := f.SelectDirectoryDialog1
	if selectDir.Execute() {
		filename := selectDir.FileName()
		fmt.Println("Recovery to the Folder: ", filename)
		f.Edit2.SetText(filename)
		recoveryToFolder = filename
	}

}

func (f *TForm1) OnButton3Click(sender vcl.IObject) {
	winfrCmd := fmt.Sprintf("winfr %s %s %s /y:%s", deletedFolder, recoveryToFolder, recoveryType, strings.Trim(recoveryFile, ","))
	fmt.Println(winfrCmd)
	cmd := exec.Command("cmd.exe", "/c", "start "+"dir\npause")
	err := cmd.Run()
	if err != nil {
		vcl.ShowMessage("Error!")
		panic(err)
	}

}

func (f *TForm1) OnRadioButton2Change(sender vcl.IObject) {
	recoveryType = "/r"
	fmt.Printf("Recovery type change to: %s\n", recoveryType)
}
func (f *TForm1) OnRadioButton3Change(sender vcl.IObject) {
	recoveryType = "/r"
	fmt.Printf("Recovery type change to: %s\n", recoveryType)
}
func (f *TForm1) OnRadioButton4Change(sender vcl.IObject) {
	recoveryType = "/r"
	fmt.Printf("Recovery type change to: %s\n", recoveryType)
}
func (f *TForm1) OnRadioButton5Change(sender vcl.IObject) {
	recoveryType = "/x"
	fmt.Printf("Recovery type change to: %s\n", recoveryType)
}

func (f *TForm1) OnEdit1Change(sender vcl.IObject) {
	f.Edit1.Refresh()
}

func (f *TForm1) OnEdit2Change(sender vcl.IObject) {
	f.Edit2.Refresh()
}

func (f *TForm1) OnCheckBox1Change(sender vcl.IObject) {
	if f.CheckBox1.Checked() == true {
		recoveryFile = strings.Join([]string{recoveryFile, "ASF,MP3"}, ",")
		fmt.Printf("checkbox : %s\n", recoveryFile)
	} else {
		recoveryFile = strings.Replace(recoveryFile, ",ASF,MP3", "", -1)
		fmt.Printf("checkbox : %s\n", recoveryFile)
	}

}

func (f *TForm1) OnCheckBox2Change(sender vcl.IObject) {
	if f.CheckBox2.Checked() == true {
		recoveryFile = strings.Join([]string{recoveryFile, "JPEG,PNG"}, ",")
		fmt.Printf("checkbox : %s\n", recoveryFile)
	} else {
		recoveryFile = strings.Replace(recoveryFile, ",JPEG,PNG", "", -1)
		fmt.Printf("checkbox : %s\n", recoveryFile)
	}

}

func (f *TForm1) OnCheckBox3Change(sender vcl.IObject) {

	if f.CheckBox3.Checked() == true {
		recoveryFile = strings.Join([]string{recoveryFile, "MPEG"}, ",")
		fmt.Printf("checkbox : %s\n", recoveryFile)
	} else {
		recoveryFile = strings.Replace(recoveryFile, ",MPEG", "", -1)
		fmt.Printf("checkbox : %s\n", recoveryFile)
	}
}

func (f *TForm1) OnCheckBox4Change(sender vcl.IObject) {
	if f.CheckBox4.Checked() == true {
		recoveryFile = strings.Join([]string{recoveryFile, "ZIP,PDF"}, ",")
		fmt.Printf("checkbox : %s\n", recoveryFile)
	} else {
		recoveryFile = strings.Replace(recoveryFile, ",ZIP,PDF", "", -1)
		fmt.Printf("checkbox : %s\n", recoveryFile)
	}
}

func (f *TForm1) OnFormCreate(sender vcl.IObject) {
	fmt.Println("Welcome to the debug window !")
	ver := readSysVersion()
	f.Label3.SetCaption(ver)
}

func readSysVersion() string {
	k, err := registry.OpenKey(registry.LOCAL_MACHINE, `SOFTWARE\Microsoft\Windows NT\CurrentVersion`, registry.QUERY_VALUE)
	if err != nil {
		fmt.Printf("%s", err)
	}
	defer k.Close()

	ri, _, err := k.GetStringValue("ReleaseId")
	if err != nil {
		fmt.Printf("%s", err)
	}
	fmt.Printf("Win10 ReleaseId: %s\n", ri)
	return ri
}
